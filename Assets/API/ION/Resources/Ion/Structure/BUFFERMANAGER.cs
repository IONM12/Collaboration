///////////////////////////////////////////////////////////////////////////////////////////////////////
/*
 * ██████████████████████████████████████████████████████████████████████████████
 * ██████████████████████████████████████████████████████████████████████████████
 * ███████████████████████▀█████████████████████████████▀████████████████████████
 * █████████████████████▀   '▀████████████████████████▀   '▀█████████████████████
 * ███████████████████▀        '▀███████████████████▀        '▀██████████████████
 * █████████████████▀             '▀██████████████▀             '▀███████████████
 * ███████████████▀                  '▀█████████▀                  '▀████████████
 * █████████████▀      ▄             ▄████████▀                       '▀█████████
 * ███████████▀      ▄███▄,        ▄████▀▀▀▀▀      ▄█▄,                  '▀██████
 * █████████▀      ▄████████▄,   ▄███▀           ▄██████▄,                  '▀███
 * ███████▀        '▀██████████▄████    I O N   ▐██████████▄,                ▄███
 * █████▀             '▀███████████▌     API     █████████████▄,           ▄█████
 * ███▀                  '▀████████▀	  #     ███▀ '▀██████████▄       ▄███████
 * ████▄,                   '▀███▀          ▄▄███▀      '▀██████▀      ▄█████████
 * ███████▄,                   ▀      ▄████████▀           '▀█▀      ▄███████████
 * ██████████▄,                     ▄████████▀                     ▄█████████████
 * █████████████▄,                ▄████████████▄,                ▄███████████████
 * ████████████████▄,           ▄█████████████████▄,           ▄█████████████████
 * ███████████████████▄,      ▄██████████████████████▄,      ▄███████████████████
 * ██████████████████████▄, ▄███████████████████████████▄, ▄█████████████████████
 * ██████████████████████████████████████████████████████████████████████████████
 * ██████████████████████████████████████████████████████████████████████████████
 *
 * ----------------------------------------------------------------------
 * Copyright (C) M-12 technology Incorporated - All Rights Reserved.
 * ----------------------------------------------------------------------
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of M-12 technology Incorporated and its suppliers.
 * The intellectual and technical concepts contained
 * herein are proprietary to M-12 Technology Incorporated
 * and its suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from M-12 technology Incorporated.
 * 
 * Website  : http://www.m12.technology
 *
 * Facebook : https://www.facebook.com/m12.technology
 * 
 * Twitter  : https://twitter.com/ION_CODE
 * 
 * Youtube  : https://www.youtube.com/user/TheVersio/
 * 
 * E-mail   : m12.software.technology@gmail.com
 * 
 * Developer : ION
 * 
 * ----------------------------------------------------------------------
 * Copyright (C) M-12 technology Incorporated - All Rights Reserved.
 * ----------------------------------------------------------------------
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////
using UnityEngine;
///////////////////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Collections.Generic;
///////////////////////////////////////////////////////////////////////////////////////////////////////
namespace Ion
{
	public class BUFFERMANAGER : MONOBEHAVIOUR
	{
		// ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■
		//----------------------------------------------------------------------------------------------------
		public int BufferCount = 0;
		//----------------------------------------------------------------------------------------------------
		static List<BUFFER> BufferList = new List<BUFFER>();
		static List<BUFFER> RemoveBufferList = new List<BUFFER>();
		//----------------------------------------------------------------------------------------------------
		// ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■ ■

		//====================================================================================================
		//STATIC
		//====================================================================================================
		static BUFFERMANAGER()
		{
			var obj = GAMEOBJECT.FindCreate("ION");
			obj.GetComponentAdd<BUFFERMANAGER>();
		}
		//====================================================================================================
		void Start()
		{
		}
		//====================================================================================================
		void OnDisable()
		{
			ReleaseAll();
		}
		//====================================================================================================
		void OnDestroy()
		{
			ReleaseAll();
		}
		//====================================================================================================
		void OnApplicationQuit()
		{
			ReleaseAll();
		}
		//====================================================================================================
		void Update()
		{
			BufferCount = BufferList.Count;
			ReleaseUpdate();

			GC.Collect();
		}
		//====================================================================================================
		//Releaseljuk az osszes mar nem hasznalt buffert
		//====================================================================================================
		void ReleaseUpdate()
		{
			int count = RemoveBufferList.Count;
			for (int i = 0; i < count; i++)
			{
				var buffer = RemoveBufferList[i];
				BufferList.Remove(buffer);
				if (buffer != null) buffer.Release();
			}

			RemoveBufferList.Clear();
		}
		//====================================================================================================
		//Releaseljuk az osszes beregisztralt buffert
		//====================================================================================================
		void ReleaseAll()
		{
			int count = BufferList.Count;
			for (int i = 0; i < count; i++)
			{
				var buffer = BufferList[i];
				if (buffer != null) buffer.Release();
			}

			BufferList.Clear();
		}
		//====================================================================================================
		public static void AddBuffer(BUFFER buffer)
		{
			BufferList.Add(buffer);
		}
		//====================================================================================================
		public static void RemoveBuffer(BUFFER buffer)
		{
			BufferList.Remove(buffer);
		}
		//====================================================================================================
		public static void AddRemoveBuffer(BUFFER buffer)
		{
			RemoveBufferList.Add(buffer);
		}
		//====================================================================================================
	}
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////
